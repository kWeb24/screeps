module.exports=function(e){var t={};function r(s){if(t[s])return t[s].exports;var o=t[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(s,o,function(t){return e[t]}.bind(null,o));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=3)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(){this.ROLE="universal",this.POPULATION=2,this.GENOME=[WORK,CARRY,MOVE],this.CAPABLE_OF=[],this.ON_DEMAND=!0,this.USE_ENERGY_DEPOSITS=!0}run(e){}needsHelp(e){return!1}shouldSpawn(e){return e.energyAvailable,e.energyCapacityAvailable,this.countCreeps()<this.POPULATION}getCreeps(){return _.filter(Game.creeps,e=>e.memory.role==this.ROLE)}countCreeps(){return this.getCreeps().length}dropRoad(e){if(CACHE.ROOMS[e.room.name].getMyConstructionSites().length<10){const t=e.room.lookAt(e.pos);"structure"!=t.type&&"constructionSite"!=t.type&&e.room.createConstructionSite(e.pos,STRUCTURE_ROAD)}}getPrimarySource(e){const t=CACHE.ROOMS[e.name].getSources();let r,s,o=[];for(const e in t){const r=_.filter(Game.creeps,r=>r.memory.primarySource==t[e].id&&"harvester"===r.memory.role);o.push(r.length)}return o.forEach((e,t)=>{(void 0===r||e<r)&&(r=e,s=t)}),t[s].id}selectSource(e){let t=e.getSources();const r=_.filter(t,t=>t.id==e.memory.primarySource);let s=r[0];if(r.energy<e.store.getCapacity(RESOURCE_ENERGY)||r.ticksToRegeneration>10){const r=t[0];t.forEach(t=>{t.energy>e.store.getFreeCapacity()&&(r=t)}),s=r}return s}selectEnergyDeposit(e,t=!1,r=!1,s=!1){const o=CACHE.ROOMS[e.room.name].getContainers(),i=e.room.storage;let a=!1,n=!1,l=!1;if(void 0!==i&&i.isActive()&&(a=i.id,i.store.getFreeCapacity(RESOURCE_ENERGY)>=e.store.getCapacity(RESOURCE_ENERGY)&&(n=i)),!t&&void 0!==o){const t=_.filter(o,e=>e.isActive());if(t.length){const r=_.filter(t,t=>t.store.getUsedCapacity(RESOURCE_ENERGY)>=e.store.getCapacity(RESOURCE_ENERGY));if(r.length){let t=r[0];r.forEach(r=>{r.store.getUsedCapacity(RESOURCE_ENERGY)>e.store.getFreeCapacity()&&(t=r)}),a=t.id,l=t}}}if(s)return l;if(n||l)if(r){if(l)return l;if(n)return n}else{if(n)return n;if(l)return l}return a}harvest(e){e.status("harvesting");let t=this.selectEnergyDeposit(e);if(!1!==t&&"string"!=typeof t&&void 0!==t&&this.USE_ENERGY_DEPOSITS&&t.store.getUsedCapacity(RESOURCE_ENERGY)>0)e.withdraw(t,RESOURCE_ENERGY)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")),e.target(t.id);else if("string"==typeof t&&this.USE_ENERGY_DEPOSITS){const t=this.getSourceWithMostEnergy(e);e.harvest(t)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")),e.target(t.id)}else if(t=this.selectSource(e),e.harvest(t)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")),t)e.target(t.id);else{const t=this.getSourceWithMostEnergy(e);e.harvest(t)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")),e.target(t.id)}}getSourceWithMostEnergy(e){const t=e.getSources();let r=t[0];return t.forEach(t=>{t.energy>e.store.getFreeCapacity()&&(r=t)}),r}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(e){this.ENABLED=e.enabled,this.COLORS={white:"rgb(255, 255, 255)",grey:"rgba(255, 255, 255, 0.6)",light:"rgba(255, 255, 255, 0.2)",red:"rgb(255, 65, 65)",green:"rgb(105, 212, 29)",yellow:"rgb(217, 169, 0)",blue:"rgb(54, 211, 221)",violet:"rgb(212, 29, 127)",black:"rgb(0,0,0)"}}log(e,t=!1){this.buildLog(e,this.COLORS.white,t)}error(e,t=!1){this.buildLog(e,this.COLORS.red,t)}stateChange(e,t=!1){this.buildLog(e,this.COLORS.blue,t)}success(e,t=!1){this.buildLog(e,this.COLORS.green,t)}warning(e,t=!1){this.buildLog(e,this.COLORS.yellow,t)}note(e,t=!1){this.buildLog(e,this.COLORS.grey,t)}finish(e,t=!1){if(!this.ENABLED)return!1;let r=this.buildLadder(t);r+='<span style="padding: 0 5px; background: '+this.COLORS.green+"; color: "+this.COLORS.black+'">'+e+"</span>",console.log(r)}ignore(e,t=!1){if(!this.ENABLED)return!1;let r=this.buildLadder(t);r+='<span style="padding: 0 5px; background: '+this.COLORS.grey+"; color: "+this.COLORS.black+'">'+e+"</span>",console.log(r)}countLoop(e,t=!1){if(!this.ENABLED)return!1;let r=this.buildLadder(t);r+='<span style="padding: 0 5px; background: '+this.COLORS.white+"; color: "+this.COLORS.black+'">'+e+"</span>",console.log(r)}buildLog(e,t,r){if(!this.ENABLED)return!1;let s="";r?(s+=this.buildLadder(r),s+='<span style="color: '+t+'">'+e+"</span>"):s='<span style="color: '+t+'">'+e+"</span>",console.log(s)}buildLadder(e){if(e){let r='<span style="color: '+this.COLORS.light+'">';for(var t=0;t<e;t++)r+="|&nbsp;&nbsp;&nbsp;";return r+="</span>"}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="repairer",this.POPULATION=1,this.GENOME=[WORK,CARRY,MOVE],this.MAX_GENOME_LENGTH=6,this.CAPABLE_OF=["upgrader"],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!0}run(e){("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvest(e),("repairing"!=e.status()&&0===e.store.getFreeCapacity()||"repairing"==e.status()&&e.store.getUsedCapacity()>0||"bored"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.repair(e)}repair(e){var t=this.findClosestRepairableStructure(e);e.status("repairing"),t?(e.target(t.id),e.repair(t)==ERR_NOT_IN_RANGE?(e.moveTo(t),e.status("moving")):t.structureType==STRUCTURE_TOWER&&e.transfer(t,RESOURCE_ENERGY)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving"))):(e.target(e.room.controller.name),e.upgradeController(e.room.controller)==ERR_NOT_IN_RANGE&&(e.moveTo(e.room.controller),e.status("moving")))}needsHelp(e){return!!this.findClosestRepairableStructure(e)}findClosestRepairableStructure(e){const t=e.pos.findClosestByRange(FIND_STRUCTURES,{filter:e=>e.structureType==STRUCTURE_TOWER&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0});if(t)return t;let r=e.pos.findClosestByRange(FIND_STRUCTURES,{filter:t=>t.hits<t.hitsMax&&void 0!==e.room.storage&&e.room.storage.store.getUsedCapacity(RESOURCE_ENERGY)>5e4||t.hits<1*t.hitsMax&&t.hits<1e5&&t.structureType!=STRUCTURE_ROAD});return r&&null!==r?r:r=e.pos.findClosestByRange(FIND_STRUCTURES,{filter:e=>e.hits<1*e.hitsMax})}shouldSpawn(e){return _.filter(Game.creeps,t=>"repairer"==t.memory.role&&t.memory.room==e.name).length<this.POPULATION}}},function(e,t,r){e.exports=r(4)},function(e,t,r){"use strict";(function(t){r(6);var s=u(r(9)),o=u(r(11)),i=u(r(13)),a=u(r(16)),n=u(r(27)),l=u(r(28));function u(e){return e&&e.__esModule?e:{default:e}}t.CACHE=new o.default,t.CORE=new s.default,t.PLANNER=new i.default,t.ROLE_MANAGER=new a.default,t.SPAWN_MANAGER=new n.default,t.UTILS=new l.default,console.log("Init"),e.exports.loop=(()=>CORE.loop())}).call(this,r(5))},function(e,t,r){"use strict";var s;s=function(){return this}();try{s=s||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(s=window)}e.exports=s},function(e,t,r){"use strict";r(7)},function(e,t,r){"use strict";r(8),Object.assign(Creep.prototype,{injectMemory(e="none",t="none",r="none",s="bored",o="none"){this.memory.role=e,this.memory.job=t,this.memory.target=r,this.memory.status=s,this.memory.primarySource=o}}),Object.assign(Creep.prototype,{remember(e,t){this.memory.key=t}}),Object.assign(Creep.prototype,{forget(e){delete this.memory.key}}),Object.assign(Creep.prototype,{role(){return this.memory.role}}),Object.assign(Creep.prototype,{job(e=!1){if(!e)return this.memory.job;this.memory.job=e}}),Object.assign(Creep.prototype,{target(e=!1){if(!e)return this.memory.target;this.memory.target=e}}),Object.assign(Creep.prototype,{status(e=!1){if(!e)return this.memory.status;this.memory.status=e}}),Object.assign(Creep.prototype,{primarySource(e=!1){if(!e)return this.memory.primarySource;this.memory.primarySource=e}})},function(e,t,r){"use strict";Object.assign(Creep.prototype,{getSources(){return CACHE.ROOMS[this.room.name].getSources()}}),Object.assign(Creep.prototype,{getActiveSources(){return CACHE.ROOMS[this.room.name].getActiveSources()}}),Object.assign(Creep.prototype,{getClosestActiveSource(){return this.pos.findClosestByRange(FIND_SOURCES_ACTIVE)}}),Object.assign(Creep.prototype,{getEnergySinks(){return CACHE.ROOMS[this.room.name].getEnergySinks()}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(r(1)),o=i(r(10));function i(e){return e&&e.__esModule?e:{default:e}}console.log(">> Loading Core...");const a=new s.default({enabled:!1});t.default=class{constructor(){this.PARAM_ADAPTIVE_ROLES=!1,this.LOOP=!0,console.log("-- -- CORE_LOGGER_ENABLED: "+a.ENABLED),console.log("-- -- PARAM_ADAPTIVE_ROLES:"+this.PARAM_ADAPTIVE_ROLES)}loop(){this.clearDeadCreeps(),this.spawnCreeps(),this.runStructures(),this.runCreeps(),this.LOOP=!this.LOOP}clearDeadCreeps(){for(var e in Memory.creeps)Game.creeps[e]||delete Memory.creeps[e]}spawnCreeps(){SPAWN_MANAGER.spawn()}runCreeps(){for(var e in Game.creeps){var t=Game.creeps[e];ROLE_MANAGER.ROLES.forEach(e=>{t.memory.role==e.ROLE&&(this.PARAM_ADAPTIVE_ROLES?ROLE_MANAGER.selectRole(t):e.run(t))})}}runStructures(){this.Tower=new o.default;for(const e in Game.rooms)if(void 0!==CACHE.ROOMS[e]){CACHE.ROOMS[e].getStructures(!0),CACHE.ROOMS[e].getMyTowers().length&&CACHE.ROOMS[e].getMyTowers().forEach((e,t)=>{this.Tower.run(e)});const t=CACHE.ROOMS[e].getMyTerminals();if(t.length){const r=Game.market.getAllOrders({type:ORDER_BUY,resourceType:RESOURCE_LEMERGIUM});if(r.length&&t[0].store.getUsedCapacity(RESOURCE_LEMERGIUM)>0){const s=Game.market.deal(r[0].id,t[0].store.getUsedCapacity(RESOURCE_LEMERGIUM),e);console.log(`Trade result: ${s}`)}}}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(){}run(e){var t=e.pos.findClosestByRange(FIND_HOSTILE_CREEPS);t?e.attack(t):(e.store.getUsedCapacity(RESOURCE_ENERGY),e.store.getCapacity(RESOURCE_ENERGY))}findClosestDamagedStructure(e){return e.pos.findClosestByRange(FIND_STRUCTURES,{filter:e=>e.hits<e.hitsMax})}findClosestDamagedStructureNotRoad(e){return e.pos.findClosestByRange(FIND_STRUCTURES,{filter:e=>e.hits<e.hitsMax&&e.structureType!=STRUCTURE_ROAD})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(12));t.default=class{constructor(){this.ROOMS=[],this.initRoomCache()}initRoomCache(){for(const e in Game.rooms)void 0===this.ROOMS[e]&&(this.ROOMS[e]=new s.default(Game.rooms[e],e))}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(e,t){this.ROOM=e,this.ID=t,this.SOURCES=void 0,this.SOURCES_ACTIVE=void 0,this.CREEPS=void 0,this.MY_CREEPS=void 0,this.HOSTILE_CREEPS=void 0,this.DROPPED_ENERGY=void 0,this.DROPPED_RESOURCES=void 0,this.FLAGS=void 0,this.CONSTRUCTION_SITES=void 0,this.MY_SPAWNS=void 0,this.HOSTILE_SPAWNS=void 0,this.MY_CONSTRUCTION_SITES=void 0,this.HOSTILE_CONSTRUCTION_SITES=void 0,this.MINERALS=void 0,this.NUKES=void 0,this.TOMBSTONES=void 0,this.STRUCTURES=void 0,this.MY_STRUCTURES=void 0,this.HOSTILE_STRUCTURES=void 0,this.ENERGY_SINKS=void 0,this.CONTAINERS=void 0,this.MY_STORAGE=void 0,this.MY_TOWERS=void 0,this.BASE_POSSIBLE_POSITIONS={},this.BASE_POSSIBLE_POLY={},this.MY_EXTRACTORS=void 0,this.MY_LABS=void 0,this.MY_TERMINALS=void 0,this.MY_FACTORIES=void 0,this.KEEPERLIARS=void 0,this.PORTALS=void 0,this.POWERBANKS=void 0,this.MY_EXTENSIONS=void 0,this.MY_CONTROLLER=void 0,this.MY_LINKS=void 0,this.MY_NUKERS=void 0,this.MY_OBSERVERS=void 0,this.MY_POWERSPAWNS=void 0,this.MY_RAMPARTS=void 0,this.MY_WALLS=void 0}getSources(){return this.SOURCES=this.ROOM.find(FIND_SOURCES),this.SOURCES}getActiveSources(){return this.SOURCES_ACTIVE=this.ROOM.find(FIND_SOURCES_ACTIVE),this.SOURCES_ACTIVE}getCreeps(){return this.CREEPS=this.ROOM.find(FIND_CREEPS),this.CREEPS}getMyCreeps(){return this.MY_CREEPS=this.ROOM.find(FIND_MY_CREEPS),this.MY_CREEPS}getHostileCreeps(){return this.HOSTILE_CREEPS=this.ROOM.find(FIND_HOSTILE_CREEPS),this.HOSTILE_CREEPS}getDroppedEnergy(){return this.DROPPED_ENERGY=this.ROOM.find(FIND_DROPPED_ENERGY),this.DROPPED_ENERGY}getDroppedResources(){return this.DROPPED_RESOURCES=this.ROOM.find(FIND_DROPPED_RESOURCES),this.DROPPED_RESOURCES}getFlags(){return void 0===this.FLAGS&&(this.FLAGS=this.ROOM.find(FIND_FLAGS)),this.FLAGS}getConstructionSites(){return this.CONSTRUCTION_SITES=this.ROOM.find(FIND_CONSTRUCTION_SITES),this.CONSTRUCTION_SITES}getMyConstructionSites(){return this.MY_CONSTRUCTION_SITES=this.ROOM.find(FIND_MY_CONSTRUCTION_SITES),this.MY_CONSTRUCTION_SITES}getHostileConstructionSites(){return void 0===this.HOSTILE_CONSTRUCTION_SITES&&(this.HOSTILE_CONSTRUCTION_SITES=this.ROOM.find(FIND_HOSTILE_CONSTRUCTION_SITES)),this.HOSTILE_CONSTRUCTION_SITES}getMySpawns(){return this.MY_SPAWNS=this.ROOM.find(FIND_MY_SPAWNS),this.MY_SPAWNS}getHostileSpawns(){return void 0===this.HOSTILE_SPAWNS&&(this.HOSTILE_SPAWNS=this.ROOM.find(FIND_HOSTILE_SPAWNS)),this.HOSTILE_SPAWNS}getMinerals(){return this.MINERALS=this.ROOM.find(FIND_MINERALS),this.MINERALS}getNukes(){return void 0===this.NUKES&&(this.NUKES=this.ROOM.find(FIND_NUKES)),this.NUKES}getTombstones(){return this.TOMBSTONES=this.ROOM.find(FIND_TOMBSTONES),this.TOMBSTONES}getStructures(e=!1){return(void 0===this.STRUCTURES||e)&&(this.STRUCTURES=this.ROOM.find(FIND_STRUCTURES)),this.STRUCTURES}getMyStructures(){return this.MY_STRUCTURES=this.ROOM.find(FIND_MY_STRUCTURES),this.MY_STRUCTURES}getHostileStructures(){return void 0===this.HOSTILE_STRUCTURES&&(this.HOSTILE_STRUCTURES=this.ROOM.find(FIND_HOSTILE_STRUCTURES)),this.HOSTILE_STRUCTURES}getEnergySinks(){return this.ENERGY_SINKS=this.ROOM.find(FIND_STRUCTURES,{filter:e=>e.structureType==STRUCTURE_SPAWN||e.structureType==STRUCTURE_EXTENSION||e.structureType==STRUCTURE_STORAGE||e.structureType==STRUCTURE_CONTAINER||e.structureType==STRUCTURE_TOWER}),this.ENERGY_SINKS}getContainers(){const e=this.getStructures();return this.CONTAINERS=_.filter(e,e=>e.structureType==STRUCTURE_CONTAINER),this.CONTAINERS}getMyStorage(){return void 0!==this.ROOM.storage?[this.ROOM.storage]:[]}getMyExtractors(){const e=this.getStructures();return this.MY_EXTRACTORS=_.filter(e,e=>e.structureType==STRUCTURE_EXTRACTOR),this.MY_EXTRACTORS}getMyLabs(){const e=this.getStructures();return this.MY_LABS=_.filter(e,e=>e.structureType==STRUCTURE_LAB),this.MY_LABS}getMyTerminals(){return void 0!==this.ROOM.terminal?[this.ROOM.terminal]:[]}getMyFactories(){const e=this.getStructures();return this.MY_FACTORIES=_.filter(e,e=>e.structureType==STRUCTURE_FACTORY),this.MY_LABS}getMyTowers(){const e=this.getStructures();return this.MY_TOWERS=_.filter(e,e=>e.structureType==STRUCTURE_TOWER),this.MY_TOWERS}getBasePossiblePositions(e,t){if(void 0===this.BASE_POSSIBLE_POSITIONS[e]){const r=t;this.BASE_POSSIBLE_POSITIONS[e]=[];const s=[];for(let e=0;e<50-r.core.size.x;e++)for(let t=0;t<50-r.core.size.y;t++){let o=!1;if(this.ROOM.lookAtArea(t,e,t+r.core.size.y,e+r.core.size.x,!0).forEach(e=>{"structure"===e.type&&"road"!==e[e.type].structureType?o=!0:"wall"===e[e.type]&&(o=!0)}),!o){const o=PathFinder.search(this.ROOM.getPositionAt(e+Math.ceil(r.core.size.x/2),Math.ceil(r.core.size.y/2)),{pos:this.ROOM.controller.pos,range:1},{plainCost:1,swampCost:1}).path.length;let i=0;this.getSources().forEach(t=>{i+=PathFinder.search(this.ROOM.getPositionAt(e+Math.ceil(r.core.size.x/2),Math.ceil(r.core.size.y/2)),{pos:t.pos,range:1},{plainCost:1,swampCost:1}).path.length}),s.push({x:e,y:t,x2:r.core.size.x,y2:r.core.size.y,totalPathsRequired:o}),t+=Math.ceil(r.core.size.y/2)}}let o=s[0];s.forEach(e=>{e.totalPathsRequired<o.totalPathsRequired&&(o=e)}),this.BASE_POSSIBLE_POSITIONS[e].push(o)}return this.BASE_POSSIBLE_POSITIONS[e]}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(14));t.default=class{constructor(){this.ROOMS=[],this.initRoomPlanning()}initRoomPlanning(){for(const e in Game.rooms)void 0===this.ROOMS[e]&&void 0!==Game.rooms[e].controller&&Game.rooms[e].controller.my&&(this.ROOMS[e]=new s.default(Game.rooms[e]))}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(15));t.default=class{constructor(e){this.ROOM=e,[this.SPAWN]=CACHE.ROOMS[this.ROOM.name].getMySpawns(),this.PATHS=[],this.planRoads(),this.buildRoads(),this.buildContainers()}planRoads(){this.findPath(this.ROOM.controller.pos,CACHE.ROOMS[this.ROOM.name].getSources()),this.findPath(this.ROOM.controller.pos,CACHE.ROOMS[this.ROOM.name].getMinerals()),this.findPath(this.ROOM.controller.pos,CACHE.ROOMS[this.ROOM.name].getMySpawns())}findPath(e,t){for(const r in t){const s=PathFinder.search(e,{pos:t[r].pos,range:1},{plainCost:1,swampCost:1});this.PATHS.push(s.path)}}buildRoads(){this.PATHS.forEach(e=>{e.forEach(e=>{this.ROOM.lookAt(e).forEach(t=>{"structure"!=t.type&&"constructionSite"!=t.type&&this.ROOM.createConstructionSite(e,STRUCTURE_ROAD)})})})}drawVisuals(){this.PATHS.forEach(e=>{this.ROOM.visual.poly(e,{opacity:1,stroke:"#dfff1b",lineStyle:"dotted"})}),this.findCoreBaseSpace()}findCoreBaseSpace(){for(const[e,t]of Object.entries(s.default))CACHE.ROOMS[this.ROOM.name].getBasePossiblePositions(e,t).forEach(e=>{t.core.levels.forEach(t=>{t.forEach(t=>{"road"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#ffffff",radius:.15}),"spawn"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#66c7ff",radius:.3,opacity:1}),"link"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#00fffb",radius:.3,opacity:1}),"powerSpawn"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#ff00e1",radius:.3,opacity:1}),"tower"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#ff0026",radius:.3,opacity:1}),"storage"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#ff0026",radius:.3,opacity:1}),"nuke"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#ff7300",radius:.3,opacity:1}),"factory"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#00ff88",radius:.3,opacity:1}),"terminal"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#a2ff00",radius:.3,opacity:1}),"wall"===t.type&&this.ROOM.visual.circle(e.x+t.pos[0],e.y+t.pos[1],{fill:"#000000",radius:.3,opacity:1})})})})}buildContainers(){}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={base:{core:{size:{x:9,y:7},levels:[[{type:"road",pos:[3,0]},{type:"road",pos:[4,0]},{type:"road",pos:[5,0]},{type:"road",pos:[2,1]},{type:"road",pos:[4,1]},{type:"road",pos:[6,1]},{type:"road",pos:[1,2]},{type:"road",pos:[2,2]},{type:"road",pos:[4,2]},{type:"road",pos:[6,2]},{type:"road",pos:[7,2]},{type:"road",pos:[0,3]},{type:"road",pos:[3,3]},{type:"road",pos:[5,3]},{type:"road",pos:[5,3]},{type:"road",pos:[8,3]},{type:"road",pos:[7,3]},{type:"road",pos:[7,3]},{type:"road",pos:[1,4]},{type:"road",pos:[2,4]},{type:"road",pos:[4,4]},{type:"road",pos:[6,4]},{type:"road",pos:[7,4]},{type:"road",pos:[2,5]},{type:"road",pos:[4,5]},{type:"road",pos:[6,5]},{type:"road",pos:[3,6]},{type:"road",pos:[4,6]},{type:"road",pos:[5,6]},{type:"spawn",pos:[6,3]}],[{type:"wall",pos:[0,0]},{type:"wall",pos:[1,0]},{type:"wall",pos:[2,0]},{type:"wall",pos:[6,0]},{type:"wall",pos:[7,0]},{type:"wall",pos:[8,0]},{type:"wall",pos:[0,1]},{type:"wall",pos:[1,1]},{type:"wall",pos:[7,1]},{type:"wall",pos:[8,1]},{type:"wall",pos:[0,2]},{type:"wall",pos:[8,2]},{type:"wall",pos:[0,4]},{type:"wall",pos:[8,4]},{type:"wall",pos:[0,5]},{type:"wall",pos:[1,5]},{type:"wall",pos:[7,5]},{type:"wall",pos:[8,5]},{type:"wall",pos:[0,6]},{type:"wall",pos:[1,6]},{type:"wall",pos:[2,6]},{type:"wall",pos:[6,6]},{type:"wall",pos:[7,6]},{type:"wall",pos:[8,6]}],[{type:"tower",pos:[7,3]}],[{type:"link",pos:[4,3]},{type:"storage",pos:[5,4]}],[{type:"tower",pos:[5,5]}],[{type:"terminal",pos:[3,2]}],[{type:"tower",pos:[5,1]},{type:"factory",pos:[3,4]}],[{type:"powerSpawn",pos:[2,3]},{type:"tower",pos:[3,1]},{type:"tower",pos:[1,3]},{type:"tower",pos:[3,5]},{type:"nuke",pos:[5,2]}]]}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=h(r(1)),o=h(r(17)),i=h(r(18)),a=h(r(19)),n=h(r(2)),l=h(r(20)),u=h(r(21)),E=h(r(22)),c=h(r(23)),R=h(r(24)),O=h(r(25)),p=h(r(26));function h(e){return e&&e.__esModule?e:{default:e}}console.log(">> Loading RoleManager...");const m=new s.default({enabled:!1});t.default=class{constructor(){this.Harvester=new o.default,this.Builder=new a.default,this.Upgrader=new i.default,this.Repairer=new n.default,this.RoadKeeper=new l.default,this.Settler=new u.default,this.Hauler=new E.default,this.Miner=new c.default,this.Scout=new R.default,this.RemoteHarvester=new O.default,this.Manufacturer=new p.default,this.ROLES=[this.Settler,this.Harvester,this.Upgrader,this.Hauler,this.RemoteHarvester,this.Miner,this.Builder,this.Repairer,this.RoadKeeper,this.Scout,this.Manufacturer]}selectRole(e){const t=this.getCreepRoleReference(e);if(t[0].needsHelp(e)||"upgrader"==t[0].role)t[0].run(e);else{const r=this.findRoleInNeed(e,t);r?(r.run(e),m.note(e.name+" ("+e.memory.role+") role was changed to: "+r.role,4)):t[0].run(e)}}findRoleInNeed(e,t){let r=!1;return t[0].capableOf.forEach(t=>{const s=this.ROLES.filter(r=>r.role===t&&r.needsHelp(e));r||void 0===s[0]||(r=s[0])}),r}getCreepRoleReference(e){return this.ROLES.filter(t=>t.role===e.memory.role)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="harvester",this.POPULATION=5,this.GENOME=[WORK,CARRY,MOVE],this.MAX_GENOME_LENGTH=15,this.CAPABLE_OF=["upgrader","builder"],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!1}run(e){("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvest(e),("transfering"!=e.status()&&0===e.store.getFreeCapacity()||"transfering"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.transfer(e),this.dropRoad(e)}transfer(e){const t=e.getEnergySinks(),r=_.filter(t,e=>(e.structureType==STRUCTURE_EXTENSION||e.structureType==STRUCTURE_SPAWN)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0),s=_.filter(t,e=>(e.structureType==STRUCTURE_CONTAINER||e.structureType==STRUCTURE_STORAGE)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0),o=_.filter(Game.creeps,t=>"hauler"==t.memory.role&&t.memory.room==e.memory.room).length;let i=[];r.length&&!o?i=r:s.length&&(i=s),e.status("transfering");let a=e.pos.findClosestByRange(FIND_CONSTRUCTION_SITES,{filter:e=>e.structureType==STRUCTURE_EXTENSION});i.length>0?(e.target(i[0].id),e.transfer(i[0],RESOURCE_ENERGY)==ERR_NOT_IN_RANGE&&(e.moveTo(i[0]),e.status("moving"))):null!==a?e.build(a)==ERR_NOT_IN_RANGE&&(e.moveTo(a),e.status("moving"),e.target(a.id)):(e.target(e.room.controller.name),e.upgradeController(e.room.controller)==ERR_NOT_IN_RANGE&&(e.moveTo(e.room.controller),e.status("moving")))}needsHelp(e){return!1}shouldSpawn(e){const t=CACHE.ROOMS[e.name].getSources().length,r=_.filter(Game.creeps,t=>"harvester"==t.memory.role&&t.memory.room==e.name).length,s=_.filter(Game.creeps,t=>"harvester"==t.memory.role&&t.memory.room==e.name&&t.ticksToLive<100).length;return e.energyAvailable,e.energyCapacityAvailable,r<t||s&&r-1<t}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="upgrader",this.POPULATION=1,this.GENOME=[WORK,CARRY,MOVE],this.MAX_GENOME_LENGTH=15,this.CAPABLE_OF=["harvester","builder"],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!0}run(e){("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvest(e),("upgrading"!=e.status()&&0===e.store.getFreeCapacity()||"upgrading"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.upgrade(e),this.dropRoad(e)}upgrade(e){e.status("upgrading"),e.target(e.room.controller.name),e.upgradeController(e.room.controller)==ERR_NOT_IN_RANGE&&(e.moveTo(e.room.controller),e.status("moving"))}needsHelp(e){return!1}shouldSpawn(e){const t=_.filter(Game.creeps,t=>"upgrader"==t.memory.role&&t.memory.room==e.name).length,r=e.storage;let s=0,o=2;return void 0!==r&&(s=r.store.getUsedCapacity(RESOURCE_ENERGY))>5e3&&(o=6),t<(e.controller.level<8?o:1)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="builder",this.POPULATION=3,this.GENOME=[WORK,CARRY,MOVE],this.MAX_GENOME_LENGTH=6,this.CAPABLE_OF=["upgrader"],this.ON_DEMAND=!0,this.USE_ENERGY_DEPOSITS=!0}run(e){("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvest(e),("building"!=e.status()&&0===e.store.getFreeCapacity()||"building"==e.status()&&e.store.getUsedCapacity()>0||"bored"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.build(e)}build(e){let t=e.pos.findClosestByRange(FIND_CONSTRUCTION_SITES,{filter:e=>e.structureType==STRUCTURE_EXTENSION||e.structureType==STRUCTURE_TOWER||e.structureType==STRUCTURE_CONTAINER}),r=null;for(const e in Game.rooms)if(void 0!==CACHE.ROOMS[e]&&void 0!==CACHE.ROOMS[e].ROOM.controller&&CACHE.ROOMS[e].ROOM.controller.my){const t=CACHE.ROOMS[e].ROOM.controller.pos.findClosestByRange(FIND_CONSTRUCTION_SITES,{filter:e=>e.structureType==STRUCTURE_SPAWN});t&&(r=t)}if(r&&(t=r),t||(t=e.pos.findClosestByRange(FIND_CONSTRUCTION_SITES,{filter:e=>e.structureType==STRUCTURE_EXTRACTOR})),t||(t=e.pos.findClosestByRange(FIND_CONSTRUCTION_SITES)),!t){for(const e in Game.rooms)if(void 0!==CACHE.ROOMS[e]&&void 0!==CACHE.ROOMS[e].ROOM.controller&&CACHE.ROOMS[e].ROOM.controller.my){const t=CACHE.ROOMS[e].ROOM.controller.pos.findClosestByRange(FIND_CONSTRUCTION_SITES);t&&(r=t)}t=r}if(e.status("building"),t)e.build(t)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving"),e.target(t.id));else{const t=e.pos.findClosestByRange(FIND_STRUCTURES,{filter:t=>t.structureType==STRUCTURE_WALL&&t.hits<t.hitsMax&&void 0!==e.room.storage&&e.room.storage.store.getUsedCapacity(RESOURCE_ENERGY)>5e4||t.hits<1e5});t?e.repair(t)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")):(e.moveTo(CACHE.ROOMS[e.room.name].ROOM.controller.pos),e.status("bored"))}}needsHelp(e){return e.room.find(FIND_CONSTRUCTION_SITES).length}shouldSpawn(e){let t=0;for(const e in Game.rooms)void 0!==CACHE.ROOMS[e]&&void 0!==CACHE.ROOMS[e].ROOM.controller&&CACHE.ROOMS[e].ROOM.controller.my&&(t+=CACHE.ROOMS[e].getConstructionSites().length);const r=_.filter(Game.creeps,t=>"builder"==t.memory.role&&t.memory.room==e.name).length;return t>5?r<3&&t:!r&&t}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(2));t.default=class extends s.default{constructor(){super(),this.ROLE="roadKeeper",this.POPULATION=1,this.GENOME=[WORK,CARRY,MOVE,MOVE],this.MAX_GENOME_LENGTH=8,this.CAPABLE_OF=["upgrader"],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!0}findClosestRepairableStructure(e){return e.pos.findClosestByRange(FIND_STRUCTURES,{filter:e=>e.hits<e.hitsMax/1.3&&e.structureType==STRUCTURE_ROAD})}shouldSpawn(e){return _.filter(Game.creeps,t=>"roadKeeper"==t.memory.role&&t.memory.room==e.name).length<this.POPULATION}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="settler",this.POPULATION=1,this.GENOME=[CLAIM,MOVE],this.MAX_GENOME_LENGTH=4,this.CAPABLE_OF=[],this.ON_DEMAND=!0,this.USE_ENERGY_DEPOSITS=!1}run(e){if(void 0===e.room.controller||e.room.controller.my){const t=Game.flags.Claim1;t&&(void 0!==t.room?e.moveTo(new RoomPosition(t.pos.x-1,t.pos.y-1,t.room.name)):e.moveTo(t))}else console.log("claiming"),e.claimController(e.room.controller)==ERR_NOT_IN_RANGE&&e.moveTo(e.room.controller)}shouldSpawn(e){const t=_.filter(Game.creeps,e=>"settler"==e.memory.role).length,r=Game.gcl.level;let s=0;for(const e in Game.rooms)void 0!==Game.rooms[e].controller&&Game.rooms[e].controller.my&&s++;return Game.flags.Claim1&&!t&&s<r}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="hauler",this.POPULATION=2,this.GENOME=[CARRY,MOVE],this.MAX_GENOME_LENGTH=8,this.CAPABLE_OF=[],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!0}run(e){("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvest(e),("transfering"!=e.status()&&0===e.store.getFreeCapacity()||"transfering"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.transfer(e)}needsHelp(e){return!1}shouldSpawn(e){const t=void 0!==e.storage;return _.filter(Game.creeps,t=>"hauler"==t.memory.role&&t.memory.room==e.name).length<this.POPULATION&&t}transfer(e){const t=e.getEnergySinks(),r=e.room.terminal,s=CACHE.ROOMS[e.room.name].getMyLabs();let o=[];s.length&&(o=_.filter(s,e=>e.store.getFreeCapacity(RESOURCE_ENERGY)>0));const i=_.filter(t,e=>(e.structureType==STRUCTURE_EXTENSION||e.structureType==STRUCTURE_SPAWN)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0),a=_.filter(t,e=>e.structureType==STRUCTURE_STORAGE&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0);let n=[];i.length?n=i:void 0!==r&&r.store.getUsedCapacity(RESOURCE_ENERGY)<5e3?n=[r]:o.length?n=o:a.length&&(n=a),e.status("transfering"),n.length>0&&(e.target(n[0].id),e.transfer(n[0],RESOURCE_ENERGY)==ERR_NOT_IN_RANGE&&(e.moveTo(n[0]),e.status("moving")))}harvest(e){e.status("harvesting");let t=this.selectEnergyDeposit(e,!1,!0,!0);!1!==t&&"string"!=typeof t&&void 0!==t&&(e.withdraw(t,RESOURCE_ENERGY)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")),e.target(t.id))}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="miner",this.POPULATION=5,this.GENOME=[WORK,CARRY,MOVE],this.MAX_GENOME_LENGTH=15,this.CAPABLE_OF=["upgrader","builder"],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!1}run(e){if(this.haveFullLab(e.room))return!1;("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvestMineral(e),("transfering"!=e.status()&&0===e.store.getFreeCapacity()||"transfering"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.transferMineral(e),this.dropRoad(e)}needsHelp(e){return!1}shouldSpawn(e){const t=CACHE.ROOMS[e.name].getMyExtractors().length;if(this.haveFullLab(e))return!1;const r=_.filter(Game.creeps,t=>"miner"==t.memory.role&&t.memory.room==e.name).length,s=_.filter(Game.creeps,t=>"miner"==t.memory.role&&t.memory.room==e.name&&t.ticksToLive<100).length;return r<t||s&&r-1<t}harvestMineral(e){e.status("harvesting");const t=CACHE.ROOMS[e.room.name].getMinerals();t.length&&t&&(e.harvest(t[0])==ERR_NOT_IN_RANGE&&(e.moveTo(t[0]),e.status("moving")),e.target(t[0].id))}transferMineral(e){const t=CACHE.ROOMS[e.room.name].getMyLabs(),r=CACHE.ROOMS[e.room.name].getMinerals()[0].mineralType,s=e.room.terminal,o=CACHE.ROOMS[e.room.name].getMyFactories()[0],i=_.filter(t,e=>e.store.getFreeCapacity(r)>0);let a=[];void 0!==s&&s.store.getFreeCapacity(r)>0?a.push(s):o&&o.store.getFreeCapacity(r)>0?a.push(o):i.length&&(a=i),e.status("transfering"),a.length>0&&(e.target(a[0].id),e.transfer(a[0],r)==ERR_NOT_IN_RANGE&&(e.moveTo(a[0]),e.status("moving")))}haveFullLab(e){const t=CACHE.ROOMS[e.name].getMinerals()[0].mineralType,r=CACHE.ROOMS[e.name].getMyLabs(),s=e.terminal,o=CACHE.ROOMS[e.name].getMyFactories()[0],i=_.filter(r,e=>0==e.store.getFreeCapacity(t));return o&&s?i&&0===o.store.getFreeCapacity(t)&&0===s.store.getFreeCapacity(t):o?i&&0===o.store.getFreeCapacity(t):void 0!==s?i&&0===s.store.getFreeCapacity(t):i}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="scout",this.POPULATION=1,this.GENOME=[MOVE],this.MAX_GENOME_LENGTH=4,this.CAPABLE_OF=[],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!1}run(e){if(!e.room.memory.scouted){const t=e.room.find(FIND_SOURCES),r=e.room.find(FIND_MINERALS);let s=[];t.forEach(e=>{s.push({pos:{x:e.pos.x,y:e.pos.y}})});let o=[];r.forEach(e=>{o.push({pos:{x:e.pos.x,y:e.pos.y},type:e.mineralType})}),e.room.memory.scouted={sources:s,controller:{haveController:void 0!==e.room.controller,pos:{x:e.room.controller?e.room.controller.pos.x:0,y:e.room.controller?e.room.controller.pos.y:0}},minerals:o,exits:{top:null,right:null,bottom:null,left:null}}}if(e.memory.room!==e.room.name)"top"===e.memory.lastExit?(null===e.room.memory.scouted.exits.bottom&&(e.room.memory.scouted.exits.bottom=e.memory.room),null===Memory.rooms[e.memory.room].scouted.exits.top&&(Memory.rooms[e.memory.room].scouted.exits.top=e.room.name)):"right"===e.memory.lastExit?(null===e.room.memory.scouted.exits.left&&(e.room.memory.scouted.exits.left=e.memory.room),null===Memory.rooms[e.memory.room].scouted.exits.right&&(Memory.rooms[e.memory.room].scouted.exits.right=e.room.name)):"bottom"===e.memory.lastExit?(null===e.room.memory.scouted.exits.top&&(e.room.memory.scouted.exits.top=e.memory.room),null===Memory.rooms[e.memory.room].scouted.exits.bottom&&(Memory.rooms[e.memory.room].scouted.exits.bottom=e.room.name)):"left"===e.memory.lastExit&&(null===e.room.memory.scouted.exits.right&&(e.room.memory.scouted.exits.right=e.memory.room),null===Memory.rooms[e.memory.room].scouted.exits.left&&(Memory.rooms[e.memory.room].scouted.exits.left=e.room.name)),e.moveTo(CACHE.ROOMS[e.memory.room].ROOM.controller.pos);else if(null===e.room.memory.scouted.exits.top){const t=e.pos.findClosestByRange(FIND_EXIT_TOP);null===t?e.room.memory.scouted.exits.top=!1:(e.moveTo(t),e.memory.lastExit="top")}else if(null===e.room.memory.scouted.exits.right){const t=e.pos.findClosestByRange(FIND_EXIT_RIGHT);null===t?e.room.memory.scouted.exits.right=!1:(e.moveTo(t),e.memory.lastExit="right")}else if(null===e.room.memory.scouted.exits.bottom){const t=e.pos.findClosestByRange(FIND_EXIT_BOTTOM);null===t?e.room.memory.scouted.exits.bottom=!1:(e.moveTo(t),e.memory.lastExit="bottom")}else if(null===e.room.memory.scouted.exits.left){const t=e.pos.findClosestByRange(FIND_EXIT_LEFT);null===t?e.room.memory.scouted.exits.left:(e.moveTo(t),e.memory.lastExit="left")}}shouldSpawn(e){const t=_.filter(Game.creeps,t=>"scout"==t.memory.role&&t.memory.room==e.name).length;return!e.memory.scouted&&t<this.POPULATION||(null===e.memory.scouted.exits.top||null===e.memory.scouted.exits.right||null===e.memory.scouted.exits.bottom||null===e.memory.scouted.exits.left)&&t<this.POPULATION}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="remoteHarvester",this.POPULATION=4,this.GENOME=[WORK,CARRY,MOVE],this.MAX_GENOME_LENGTH=15,this.CAPABLE_OF=[],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!1}run(e){void 0===e.memory.roomToHarvest&&(e.memory.roomToHarvest=this.getRoomToHarvest(CACHE.ROOMS[e.memory.room].ROOM)),("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvest(e),("transfering"!=e.status()&&0===e.store.getFreeCapacity()||"transfering"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.transfer(e)}harvest(e){e.status("harvesting");const t=this.getRoomToHarvest(CACHE.ROOMS[e.memory.room].ROOM);if(t){const r=new RoomPosition(t.value.sources[0].pos.x,t.value.sources[0].pos.y,t.name);if(e.room.name!==t.name)e.moveTo(r),e.status("moving");else if(e.pos.x>48&&e.pos.x<2&&e.pos.y>48&&e.pos.y<2)e.moveTo(r),e.status("moving");else{let t=e.pos.findClosestByRange(FIND_SOURCES_ACTIVE);t&&(e.harvest(t)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")),e.target(t.id))}}}transfer(e){const t=CACHE.ROOMS[e.memory.room].getEnergySinks(),r=_.filter(t,e=>(e.structureType==STRUCTURE_EXTENSION||e.structureType==STRUCTURE_SPAWN)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0),s=_.filter(t,e=>(e.structureType==STRUCTURE_CONTAINER||e.structureType==STRUCTURE_STORAGE)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0);let o=[];s.length?o=s:r.length&&(o=r),e.status("transfering");let i=e.pos.findClosestByRange(FIND_CONSTRUCTION_SITES,{filter:e=>e.structureType==STRUCTURE_EXTENSION});o.length>0?(e.target(o[0].id),e.transfer(o[0],RESOURCE_ENERGY)==ERR_NOT_IN_RANGE&&(e.moveTo(o[0]),e.status("moving"))):null!==i?e.build(i)==ERR_NOT_IN_RANGE&&(e.moveTo(i),e.status("moving"),e.target(i.id)):(e.target(e.room.controller.name),e.upgradeController(e.room.controller)==ERR_NOT_IN_RANGE&&(e.moveTo(e.room.controller),e.status("moving")))}needsHelp(e){return!1}shouldSpawn(e){return!!this.getRoomToHarvest(e)&&_.filter(Game.creeps,t=>"remoteHarvester"==t.memory.role&&t.memory.room==e.name).length<this.POPULATION}getRoomToHarvest(e){let t=!1;if(e.memory.scouted)for(const[r,s]of Object.entries(e.memory.scouted.exits))if(null!==s&&!1!==s){const e=Memory.rooms[s].scouted;(void 0===e.hasController||!0===e.hasController)&&e.sources.length&&(void 0===CACHE.ROOMS[s]||this.isMyRoom(s)?void 0===CACHE.ROOMS[s]&&(t={name:s,value:e}):t={name:s,value:e})}return t}getRoomToHarvestByCreepCount(e){let t=!1;if(e.memory.scouted)for(const[r,s]of Object.entries(e.memory.scouted.exits))if(null!==s&&!1!==s){const e=Memory.rooms[s].scouted;(void 0===e.hasController||!0===e.hasController)&&e.sources.length&&this.getCreepCountInRoom(s)<this.POPULATION&&(void 0===CACHE.ROOMS[s]||this.isMyRoom(s)?void 0===CACHE.ROOMS[s]&&(t={name:s,value:e}):t={name:s,value:e})}return t}getCreepCountInRoom(e){return _.filter(Game.creeps,t=>"remoteHarvester"==t.memory.role&&t.memory.roomToHarvest.name==e).length}isMyRoom(e){let t=!1;for(const r in Game.rooms)e===r&&void 0!==Game.rooms[r].controller&&Game.rooms[r].controller.my&&(t=!0);return t}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){return e&&e.__esModule?e:{default:e}}(r(0));t.default=class extends s.default{constructor(){super(),this.ROLE="manufacturer",this.POPULATION=1,this.GENOME=[CARRY,MOVE],this.MAX_GENOME_LENGTH=2,this.CAPABLE_OF=[],this.ON_DEMAND=!1,this.USE_ENERGY_DEPOSITS=!0}run(e){("harvesting"!=e.status()&&0===e.store.getUsedCapacity()||"harvesting"==e.status()&&e.store.getFreeCapacity()>0)&&this.harvest(e),("transfering"!=e.status()&&0===e.store.getFreeCapacity()||"transfering"==e.status()&&e.store.getUsedCapacity()>0||"moving"==e.status()&&e.store.getUsedCapacity()>0)&&this.transfer(e)}needsHelp(e){return!1}shouldSpawn(e){return!1}transfer(e){const t=CACHE.ROOMS[e.room.name].getMyTerminals();let r=[];t.length&&t[0].store.getFreeCapacity()>100&&(r=t),e.status("transfering"),r.length>0&&(e.target(r[0].id),e.transfer(r[0],RESOURCE_LEMERGIUM)==ERR_NOT_IN_RANGE&&(e.moveTo(r[0]),e.status("moving")))}harvest(e){e.status("harvesting");let t=!1;CACHE.ROOMS[e.room.name].getMyLabs().forEach(e=>{e.store.getUsedCapacity(RESOURCE_LEMERGIUM)>0&&(t=e)}),!1!==t&&void 0!==t&&(e.withdraw(t,RESOURCE_LEMERGIUM)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.status("moving")),e.target(t.id))}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),console.log(">> Loading SpawnManager...");t.default=class{constructor(){this.MAX_BODY_PARTS=50}getSpawnQueue(){let e={};for(const t in Game.rooms)void 0!==CACHE.ROOMS[t]&&CACHE.ROOMS[t].getMySpawns().length&&(e[t]=[],ROLE_MANAGER.ROLES.forEach(r=>{r.shouldSpawn(Game.rooms[t])&&e[t].push(r)}));return e}spawn(){const e=this.getSpawnQueue();for(const[t,r]of Object.entries(e)){const e=Game.rooms[t],s=CACHE.ROOMS[t].getMySpawns()[0];if(null===s.spawning&&r.length){const t=r[0].ROLE+"_"+UTILS.guidGenerator(),o=this.createAffordableGenome(r[0],e);o&&s.spawnCreep(o,t,{memory:{role:r[0].ROLE,primarySource:r[0].getPrimarySource(e),room:e.name}})}}}createAffordableGenome(e,t){const r=t.energyAvailable;t.energyCapacityAvailable;let s=0,o=[],i=!0;for(;s<r&&i;)e.GENOME.forEach(e=>{let t=0;"carry"==e&&(t=BODYPART_COST[MOVE]),s+BODYPART_COST[e]+t<r?(o.push(e),s+=BODYPART_COST[e]):i=!1}),o.length>=e.MAX_GENOME_LENGTH&&(i=!1);return!(o.length<e.GENOME.length)&&o}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(){}guidGenerator(){let e=()=>(65536*(1+Math.random())|0).toString(16).substring(1);return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}}}]);